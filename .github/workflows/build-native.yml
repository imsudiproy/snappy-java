name: Build Native

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'src/main/resources/org/xerial/snappy/VERSION'
      - 'Makefile'
      - 'Makefile.common'
      - '**/*.h'
      - '**/*.cpp'
      - .github/workflows/build-native.yml

jobs:
  build:
    name: Build native libraries
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.output.outputs.ref }}
      repo: ${{ steps.output.outputs.repo }}
    steps:
      - uses: actions/checkout@v3
      - name: Build native libraries
        # run: make clean-native native-all
        run: make clean-native native
        env:
          OCI_EXE: docker
      - name: Upload native libraries
        uses: actions/upload-artifact@v3
        with:
          name: native-libs
          path: src/main/resources/org/xerial/snappy/native/
      - name: Set job output
        id: output
        run: |
          echo "::echo::on"
          if [[ "${{ github.event_name == 'workflow_dispatch' }}" == 'true' ]]
          then
            echo "ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "repo=${{ github.repository }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
            echo "repo=${{ github.event.pull_request.head.repo.full_name }}" >> $GITHUB_OUTPUT
          fi

  push:
    permissions:
      # write permission is required for pushing commits
      contents: write
      pull-requests: write
    name: Push new native libraries to branch
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Checkout PR
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_USER_TOKEN }}
        run: gh pr checkout ${{ github.event.pull_request.number }}
      - name: Download native libraries
        uses: actions/download-artifact@v3
        with:
          name: native-libs
          path: src/main/resources/org/xerial/snappy/native/
      - run: git status
      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_USER_TOKEN }}
        run: |
          git config --global user.name "xerial-bot"
          git config --global user.email "leo+bot@xerial.org"
          git commit -am 'Update native libraries'
          git push
